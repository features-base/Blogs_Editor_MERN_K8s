apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs-deployment
  labels:
    app.kubernetes.io/name: nodejs-server
    app.kubernetes.io/instance: nodejs-server-deployment
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: server
    app.kubernetes.io/part-of: MERN_App
    app.kubernetes.io/managed-by: Minikube
spec:
  selector:
    matchLabels:
      app: nodejs-server
  replicas: 1
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 2
  template:
    metadata:
      labels:
        app: nodejs-server
    spec:
      containers:
      - name: nodejs-container
        image: localhost:5000/articles-image
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
        envFrom:
          - secretRef: 
              name: nodejs-server-secret
        resources:
          requests:
            cpu: 100m
            memory: 400Mi
          limits:
            cpu: "1"
            memory: 600Mi
        # Can be used to check if database connection has been established
        readinessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: nodejs-server
  labels:
    app.kubernetes.io/name: nodejs-server
    app.kubernetes.io/instance: nodejs-server-deployment
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: server
    app.kubernetes.io/part-of: MERN_App
    app.kubernetes.io/managed-by: Minikube
spec:
  selector:
    app: nodejs-server
  type: NodePort
  ports:
  - name: http
    protocol: TCP
    appProtocol: kubernetes.io/h2c
    port: 80
    targetPort: http
  #sessionAffinity: ClientIP